/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sh.now.arifikhsanudin.employeemanager.ui;

import sh.now.arifikhsanudin.employeemanager.service.DatabaseService;
import sh.now.arifikhsanudin.employeemanager.service.NotificationService;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Objects;

/**
 * @author Arif Ikhsanudin
 */
public class Main extends javax.swing.JFrame implements MainContract {
    Connection connection;
    Statement statement;
    DatabaseService databaseService;
    NotificationService notificationService;

    public static final Integer ID_COLUMN = 0;
    public static final Integer NOMOR_INDUK_COLUMN = 1;
    public static final Integer NAMA_COLUMN = 2;
    public static final Integer JABATAN_COLUMN = 3;
    public static final Integer GAJI_COLUMN = 4;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        initDatabase();
        populateView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        textFieldNomorInduk = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldNama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldGaji = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboBoxJabatan = new javax.swing.JComboBox<>();
        buttonUpdateEmployee = new javax.swing.JButton();
        buttonRemoveEmployee = new javax.swing.JButton();
        buttonAddEmployee = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Sistem Informasi Karyawan di PT ABC");

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nomor Induk", "Nama", "Jabatan", "Gaji"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeTable);
        if (employeeTable.getColumnModel().getColumnCount() > 0) {
            employeeTable.getColumnModel().getColumn(0).setResizable(false);
            employeeTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setText("Nomor Induk");

        jLabel3.setText("Nama");

        jLabel4.setText("Jabatan");

        jLabel5.setText("Gaji");

        comboBoxJabatan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Supervisor", "Staff" }));

        buttonUpdateEmployee.setText("Update");
        buttonUpdateEmployee.setEnabled(false);
        buttonUpdateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateEmployeeActionPerformed(evt);
            }
        });

        buttonRemoveEmployee.setForeground(new java.awt.Color(255, 0, 0));
        buttonRemoveEmployee.setText("PHK");
        buttonRemoveEmployee.setEnabled(false);
        buttonRemoveEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveEmployeeActionPerformed(evt);
            }
        });

        buttonAddEmployee.setText("Tambah Karyawan");
        buttonAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddEmployeeActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        menuItemExit.setText("Keluar");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuItemExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboBoxJabatan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(textFieldGaji)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textFieldNama)
                                            .addComponent(textFieldNomorInduk))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(buttonAddEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonUpdateEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonRemoveEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldNomorInduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(comboBoxJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldGaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(buttonRemoveEmployee)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAddEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonUpdateEmployee)
                        .addGap(58, 58, 58)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonUpdateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateEmployeeActionPerformed
        int selectedRow = employeeTable.getSelectedRow();
        TableModel employeeTableModel = employeeTable.getModel();

        Integer id = Integer.valueOf(employeeTableModel.getValueAt(selectedRow, ID_COLUMN).toString());
        String idNumber = textFieldNomorInduk.getText();
        String name = textFieldNama.getText();
        Integer roleId = getRoleId(Objects.requireNonNull(comboBoxJabatan.getSelectedItem()).toString());
        Integer salary = Integer.valueOf(textFieldGaji.getText());

        Boolean update = databaseService.updateEmployee(id, idNumber, name, roleId, salary);
        if (update) {
            populateView();
        } else {
            notificationService.showDialog("Gagal update data karyawan.");
        }

    }//GEN-LAST:event_buttonUpdateEmployeeActionPerformed

    private void buttonRemoveEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveEmployeeActionPerformed
        int selectedRow = employeeTable.getSelectedRow();
        DefaultTableModel defaultTableModel = (DefaultTableModel) employeeTable.getModel();

        Integer employeeId = Integer.valueOf(defaultTableModel.getValueAt(selectedRow, ID_COLUMN).toString());
        if (databaseService.removeEmployee(employeeId)) {
            notificationService.showDialog("Ter-PHK.");
            populateView();
        } else {
            notificationService.showDialog("Gagal mem-PHK-karyawan.");
        }
    }//GEN-LAST:event_buttonRemoveEmployeeActionPerformed

    private void buttonAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddEmployeeActionPerformed
        String inputIdentityNumber = textFieldNomorInduk.getText();
        String inputName = textFieldNama.getText();
        Integer inputRole = getRoleId(Objects.requireNonNull(comboBoxJabatan.getSelectedItem()).toString());
        Integer inputSalary = Integer.valueOf(textFieldGaji.getText());
        Boolean insert = databaseService.addEmployee(inputIdentityNumber, inputName, inputRole, inputSalary);
        if (insert) {
            populateView();
        } else {
            notificationService.showDialog("Gagal menerima karyawan baru.");
        }
    }//GEN-LAST:event_buttonAddEmployeeActionPerformed

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        int selectedRow = employeeTable.getSelectedRow();
        TableModel employeeTableModel = employeeTable.getModel();

        String idNumber = employeeTableModel.getValueAt(selectedRow, NOMOR_INDUK_COLUMN).toString();
        String name = employeeTableModel.getValueAt(selectedRow, NAMA_COLUMN).toString();
        String role = employeeTableModel.getValueAt(selectedRow, JABATAN_COLUMN).toString();
        String salary = employeeTableModel.getValueAt(selectedRow, GAJI_COLUMN).toString();

        textFieldNomorInduk.setText(idNumber);
        textFieldNama.setText(name);
        comboBoxJabatan.setSelectedItem(role);
        textFieldGaji.setText(salary);

        buttonUpdateEmployee.setEnabled(true);
        buttonRemoveEmployee.setEnabled(true);
    }//GEN-LAST:event_employeeTableMouseClicked

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddEmployee;
    private javax.swing.JButton buttonRemoveEmployee;
    private javax.swing.JButton buttonUpdateEmployee;
    private javax.swing.JComboBox<String> comboBoxJabatan;
    private javax.swing.JTable employeeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JTextField textFieldGaji;
    private javax.swing.JTextField textFieldNama;
    private javax.swing.JTextField textFieldNomorInduk;
    // End of variables declaration//GEN-END:variables


    @Override
    public void initDatabase() {
        databaseService = new DatabaseService();
        databaseService.config();
        connection = databaseService.connection;
        statement = databaseService.statement;
    }

    @Override
    public void populateView() {
        notificationService = new NotificationService();
        ResultSet employeeResultSet;
        DefaultTableModel table = (DefaultTableModel) employeeTable.getModel();
        table.setRowCount(0);
        try {
            employeeResultSet = databaseService.showAll();
            while (employeeResultSet.next()) {
                Object[] employeeRow = {
                        employeeResultSet.getString("id"),
                        employeeResultSet.getString("id_number"),
                        employeeResultSet.getString("name"),
                        getRoleName(employeeResultSet.getString("role")),
                        employeeResultSet.getString("salary"),
                };
                DefaultTableModel defaultTableModel = (DefaultTableModel) employeeTable.getModel();
                defaultTableModel.addRow(employeeRow);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private String getRoleName(String roleId) {
        switch (roleId) {
            case "1":
                return "Manager";
            case "2":
                return "Supervisor";
            case "3":
                return "Staff";
            default:
                return "";
        }
    }

    private Integer getRoleId(String role) {
        switch (role) {
            case "Manager":
                return 1;
            case "Supervisor":
                return 2;
            case "Staff":
                return 3;
            default:
                return 0;
        }
    }
}
